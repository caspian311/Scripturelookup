<?xml version="1.0" encoding="utf-8" ?>
<project name="Scripturelookup" default="war" basedir=".">
	<property file="build.properties" />

	<!-- Configure path to GWT SDK -->
	<property name="gwt.sdk" value="/usr/local/gwt" />
	<property name="appengine.sdk" value="/usr/local/appengine-java-sdk" />
	<property name="app.server" value="/usr/local/tomcat" />
	<property name="deploy-url" value="http://localhost:8080/manager" />
	<property name="deploy-username" value="admin" />
	<property name="deploy-password" value="admin" />

	<import file="${appengine.sdk}/config/user/ant-macros.xml" />

	<path id="project.class.path">
		<pathelement location="war/WEB-INF/classes" />
		<pathelement location="${gwt.sdk}/gwt-user.jar" />
		<fileset dir="${gwt.sdk}" includes="gwt-dev*.jar" />
		<fileset dir="${appengine.sdk}" includes="lib/impl/*.jar" />
		<!-- Add any additional non-server libs (such as JUnit) -->
		<fileset dir="war/WEB-INF/lib" includes="**/*.jar" />
	</path>

	<path id="project.extra.class.path">
		<fileset dir="lib" includes="**/*.jar" />
	</path>

	<target name="libs" description="Copy libs to WEB-INF/lib">
		<mkdir dir="war/WEB-INF/lib" />
		<copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
		<!-- Add any additional server libs that need to be copied -->
	</target>

	<target name="javac" depends="libs" description="Compile java source">
		<mkdir dir="war/WEB-INF/classes" />
		<javac srcdir="src" includes="**" encoding="utf-8" destdir="war/WEB-INF/classes" source="1.5" target="1.5" nowarn="true" debug="true" debuglevel="lines,vars,source">
			<classpath refid="project.class.path" />
		</javac>
		<copy todir="war/WEB-INF/classes">
			<fileset dir="src" excludes="**/*.java" />
		</copy>
	</target>

	<target name="enhance" depends="javac">
		<enhance_war war="war" />
	</target>

	<target name="gwtc" depends="enhance" description="GWT compile to JavaScript">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<pathelement location="src" />
				<path refid="project.class.path" />
			</classpath>
			<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
			<jvmarg value="-Xmx256M" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg value="net.todd.bible.scripturelookup.Scripturelookup" />
		</java>
	</target>

	<target name="devmode" depends="javac" description="Run development mode">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
			<classpath>
				<pathelement location="src" />
				<path refid="project.class.path" />
			</classpath>
			<jvmarg value="-Xmx256M" />
			<arg value="-startupUrl" />
			<arg value="Scripturelookup.html" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg value="net.todd.bible.scripturelookup.Scripturelookup" />
		</java>
	</target>

	<target name="javac.tests" depends="javac, enhance" description="Compiles test code">
		<javac srcdir="test" includes="**" destdir="war/WEB-INF/classes" encoding="utf-8" source="1.5" target="1.5" nowarn="true" debug="true" debuglevel="lines,vars,source">
			<classpath location="lib/junit-4.7.jar" />
			<classpath location="lib/mockito-all-1.8.0.jar" />
			<classpath refid="project.class.path" />
		</javac>
	</target>

	<target name="test" depends="javac.tests" description="Run development mode tests">
		<mkdir dir="reports" />
		<junit fork="yes" printsummary="yes" haltonfailure="yes">
			<jvmarg line="-Xmx256m" />
			<sysproperty key="gwt.args" value="-logLevel WARN" />
			<sysproperty key="java.awt.headless" value="true" />
			<classpath>
				<pathelement location="test" />
				<path refid="project.class.path" />
				<path refid="project.extra.class.path" />
			</classpath>
			<batchtest todir="reports">
				<fileset dir="test">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
			<formatter type="xml" />
		</junit>
	</target>

	<target name="war" depends="gwtc" description="Create a war file">
		<zip destfile="Scripturelookup.war" basedir="war" />
	</target>

	<target name="clean" description="Cleans this project">
		<delete dir="reports" failonerror="false" />
		<delete dir="war/WEB-INF/classes" failonerror="false" />
		<delete dir="war/scripturelookup" failonerror="false" />
		<delete file="Scripturelookup.war" failonerror="false" />
	</target>

	<taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask">
		<classpath>
			<fileset dir="${app.server}">
				<include name="**/*.jar" />
			</fileset>
		</classpath>
	</taskdef>

	<taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask">
		<classpath>
			<fileset dir="${app.server}">
				<include name="**/*.jar" />
			</fileset>
		</classpath>
	</taskdef>

	<target name="integration-test">
		<exec executable="cucumber" failonerror="true">
			<arg value="--tags" />
			<arg value="~@Pending" />
			<arg value="--format" />
			<arg value="junit" />
			<arg value="--out" />
			<arg value="reports" />
		</exec>
	</target>

	<target name="build-index" depends="enhance">
		<java failonerror="true" fork="true" classname="net.todd.bible.scripturelookup.server.Indexer">
			<classpath>
				<path refid="project.class.path" />
			</classpath>
			<arg value="${basedir}/war/WEB-INF/index" />
		</java>
	</target>

	<target name="ci">
		<antcall target="clean" />
		<antcall target="war" />
		<antcall target="test" />
		<deploy update="true" url="${deploy-url}" username="${deploy-username}" password="${deploy-password}" path="/Scripturelookup" war="file:${basedir}/Scripturelookup.war" />
		<antcall target="integration-test" />
		<undeploy url="${deploy-url}" username="${deploy-username}" password="${deploy-password}" path="/Scripturelookup" />
	</target>
</project>

